name: Deploy CD

on:

  # Run on push on primary branches
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy.yml'
      - 'app/**'
      - 'docker-compose.yml'
      - 'docker-compose.cicd.yml'

  # Run on manual triggers
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for the workflow
permissions:
  contents: read

# Set workflow concurrency rules
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  # Build job
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        # Fetch entire Git history
        fetch-depth: 0

    - name: Copy Git history in app source folder
      run: |
        # Initialize Git repository in app folder
        (
          cd app/app &&
          rm -rf .git &&
          git init -b main &&
          git config receive.denyCurrentBranch ignore
        )
        # Split Git history of app folder
        git subtree split --prefix=app/app -b app-history
        # Push Git history to app folder repository
        (
          git remote add app ./app/app/.git &&
          git push app app-history:main &&
          git branch -D app-history &&
          git remote remove app
        )

    - name: Build for production
      env:
        GITHUB_REPOSITORY_URL: https://github.com/${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml build

    - name: Copy application files
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml run --rm app

    - name: Chown dist folder to $USER
      run: sudo chown -R $USER:$USER ./app/dist

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./app/dist

  # Deployment job
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Dependencies
    needs:
      - build

    # Set GITHUB_TOKEN permissions for the job
    permissions:
      pages: write
      id-token: write

    # Set deployment environment
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    steps:

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
